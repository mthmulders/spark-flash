name: Run tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          check-latest: true

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository
          key: spark-flash-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            spark-flash

      - name: Build and test code
        run: mvn verify

  mutationtesting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.4.0
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository
          key: spark-flash-${{ hashFiles('**/pom.xml') }}

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          check-latest: true

      - name: Run Pitest
        run: mvn test-compile org.pitest:pitest-maven:mutationCoverage

      - name: Upload mutation test report
        run: ./.github/upload-mutation-report.sh
        env:
          API_KEY: ${{ secrets.STRYKER_DASHBOARD_TOKEN }}

  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.4.0
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v2.1.7
        with:
          path: ~/.m2/repository
          key: spark-flash-${{ hashFiles('**/pom.xml') }}

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'
          check-latest: true

      - name: SonarCloud Scan
        run: mvn -P sonarcloud -Dsonar.login=$SONAR_TOKEN verify sonar:sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
